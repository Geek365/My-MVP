apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'newlens'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "huyifei.mymvp"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file(MYAPP_RELEASE_STORE_FILE)
            storePassword MYAPP_RELEASE_STORE_PASSWORD
            keyAlias MYAPP_RELEASE_KEY_ALIAS
            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    greendao {
        schemaVersion 1
        daoPackage 'huyifei.mymvp.greendao'
        targetGenDir 'src/main/java/'
    }



    task reinforceAppTask(dependsOn: 'assembleRelease') {

        doLast {
            println "360jiagu begin"
            def currFile = new File(".")
            def appFilePath = currFile.getCanonicalPath() +
                    File.separator + "app" + File.separator + "build" + File.separator + "outputs" + File.separator + "apk" + File.separator +
                    "xx-${defaultConfig.versionName}-${defaultConfig.versionCode}-signed-${releaseTime()}.apk";

            println "appFilePath=" + appFilePath

            if (!new File(appFilePath).exists()) {
                println "apk not exist"
                return
            }

            def cmdBase = 'java.exe -jar' + ' D:\\搜狗高速下载\\jiagubao\\jiagu\\jiagu.jar'

            def cmdLogin = cmdBase + ' -login xx xx'
            def cmdImportsign = cmdBase + ' -importsign ' +
                    myStoreFile.getCanonicalPath() + ' ' + myStorePassword + ' ' + myKeyAlias + ' ' + myKeyPassword
            def cmdShowsign = cmdBase + ' -showsign'
            def cmdConfig = cmdBase + ' -config -x86'
            def cmdShowconfig = cmdBase + ' -showconfig'
            def cmdVersion = cmdBase + ' -version'
            def cmdJiagu = cmdBase + ' -jiagu ' + appFilePath + ' ' + currFile.getCanonicalPath() + ' -autosign'

            execute360JiaguCmd(cmdLogin)
            execute360JiaguCmd(cmdImportsign)
            execute360JiaguCmd(cmdShowsign)
            execute360JiaguCmd(cmdConfig)
            execute360JiaguCmd(cmdShowconfig)
            execute360JiaguCmd(cmdVersion)
            execute360JiaguCmd(cmdJiagu)

            println "360jiagu end"
        }
    }

    tasks.whenTaskAdded { theTask ->
        if (theTask.name == "assembleRelease") {
            theTask.dependsOn "cleanOutputsDir"
        }
    }

    task cleanOutputsDir {
        def outputsPath = getBuildDir().getAbsolutePath() + File.separator + "outputs" + File.separator
        println "delete outputsPath=" + outputsPath
        new File(outputsPath).deleteDir()
    }
}

def execute360JiaguCmd(cmd) {
    def p = cmd.execute(null, new File("D:\\搜狗高速下载\\jiagubao\\jiagu\\java\\bin"))
    println p.text
    p.waitFor()  // 用以等待外部进程调用结束
    println p.exitValue()
}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

repositories {
    mavenCentral()
}

dependencies {
    compile project(':HttpClient-RxJava1-X')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //greendao
    compile project(':DesignPatterns')
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'org.greenrobot:greendao:3.2.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.networkbench.newlens.agent.android:nbs.newlens.agent:2.7.0'
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    compile 'com.facebook.stetho:stetho:1.5.0'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    compile project(':RxJava2-Retorfit2')

}
